{% import "macros.njk" as macro %}
{% import "components/component-button.njk" as button %}

{% macro base(token='', group='') %}
    {% set advanced = macro.advanced(token.advanced) %}

    <div class="ui-component ui-component--modal {{ advanced }}" x-data="{ 'showModal': false }" @keydown.escape="showModal = false">
        {# Defaults #}
        {% set button_defaults = "inline-block font-bold rounded" %}

        {% set button_advanced = macro.advanced(token.modal_button.advanced) %}
        {% set button_appearance = macro.appearance(token.modal_button.appearance, group) %}
        {% if token.modal_button.type == "fill" %}
            {% set button_styles =  macro.styles(token.modal_button.style, group.button_styles) %}
        {% elif token.modal_button.type == "outline" %}
            {% set button_styles =  macro.styles(token.modal_button.style, group.button_outline_styles) %}
        {% endif %}
        {% set button_sizes =  macro.styles(token.modal_button.size, group.button_sizes) %}
        {% set button_text_alignment =  macro.styles(token.modal_button.text_alignment, group.text_alignment ) %}

        <div class="ui-component ui-component--button {{ button_advanced }} {{ button_appearance }} {{ button_text_alignment }}">
            <button type="button" class="button {{ button_defaults }} {{ button_styles }} {{ button_sizes }}" @click="showModal = true">{{ token.modal_button.text }}</button>
        </div>

        <div class="fixed inset-x-0 bottom-0 flex px-4 pb-4 sm:inset-0 sm:items-center sm:justify-center" x-show="showModal" @click.away="showModal = false" x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0 scale-90" x-transition:enter-end="opacity-100 scale-100" x-transition:leave="ease-in duration-300" x-transition:leave-start="opacity-100 scale-100" x-transition:leave-end="opacity-0 scale-90">
            <!--
                Background overlay, show/hide based on modal state.

                Entering: "ease-out duration-300"
                From: "opacity-0"
                To: "opacity-100"
                Leaving: "ease-in duration-200"
                From: "opacity-100"
                To: "opacity-0"
            -->
            <div class="fixed inset-0 transition-opacity" @click="showModal = false">
                <div class="absolute inset-0 opacity-75 bg-dark"></div>
            </div>

            <!--
                Modal panel, show/hide based on modal state.

                Entering: "ease-out duration-300"
                From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                To: "opacity-100 translate-y-0 sm:scale-100"
                Leaving: "ease-in duration-200"
                From: "opacity-100 translate-y-0 sm:scale-100"
                To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
            -->
            <div class="overflow-hidden transition-all transform rounded-lg shadow-xl bg-light sm:max-w-2xl sm:w-full" role="dialog" aria-modal="true" aria-labelledby="modal-headline">
                <div class="p-6 bg-light">
                    <div class="relative sm:flex sm:items-start">
                        <div class="absolute top-0 right-0" @click="showModal = false">
                            <svg class="cursor-pointer fill-current text-scale-800 hover:text-primary-base" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 18 18">
                                <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
                            </svg>
                        </div>
                        {% for block in token.blocks %}
                            {% if block.template == 'block-section' %}
                                {% include "blocks/section.njk" %}
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endmacro %}

{{ base(component, editor) }}